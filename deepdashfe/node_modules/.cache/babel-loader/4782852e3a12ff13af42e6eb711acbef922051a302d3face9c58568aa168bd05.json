{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rishi\\\\Deepracer-Dashboard\\\\deepdashfe\\\\src\\\\components\\\\Leaderboard.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Paper from '@mui/material/Paper';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Leaderboard() {\n  _s();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n  const columns = [{\n    id: 'Position',\n    label: 'Position',\n    minWidth: 100\n  }, {\n    id: 'Racer',\n    label: 'Racer',\n    minWidth: 170\n  }, {\n    id: 'Time',\n    label: 'Time',\n    minWidth: 170,\n    align: 'right'\n  }, {\n    id: 'GapToFirst',\n    label: 'Gap To First',\n    minWidth: 170,\n    align: 'right',\n    format: value => value.toFixed(2)\n  }];\n  function createData(Position, Racer, Time, GapToFirst) {\n    return {\n      Position,\n      Racer,\n      Time,\n      GapToFirst\n    };\n  }\n  const rows = [createData('1', 'Team DeepRacer', 100, 0), createData('2', 'Team FiHi', 200, 100), createData('3', 'Team HiFi', 250, 150), createData('4', 'Team RACE', 310, 210)];\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    sx: {\n      width: '100%',\n      overflow: 'hidden'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n      sx: {\n        maxHeight: 440,\n        backgroundColor: 'light-gray'\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        stickyHeader: true,\n        \"aria-label\": \"sticky table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          sx: {\n            backgroundColor: 'black'\n          },\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n              align: column.align,\n              style: {\n                minWidth: column.minWidth,\n                fontWeight: 'bold',\n                color: 'black'\n              } // Adding inline styles for bold and black\n              ,\n              children: column.label\n            }, column.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, rowIndex) => {\n            const {\n              Position\n            } = row;\n            let rowColor = '';\n            if (Position === 1) {\n              rowColor = 'gold';\n            } else if (Position === 2) {\n              rowColor = 'silver';\n            } else if (Position === 3) {\n              rowColor = 'bronze';\n            }\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              hover: true,\n              role: \"checkbox\",\n              tabIndex: -1,\n              children: columns.map(column => {\n                const value = row[column.id];\n                return /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: column.align,\n                  children: column.format && typeof value === 'number' ? column.format(value) : value\n                }, column.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 25\n                }, this);\n              })\n            }, row.code, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n      rowsPerPageOptions: [10, 25, 100],\n      component: \"div\",\n      count: rows.length,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      onPageChange: handleChangePage,\n      onRowsPerPageChange: handleChangeRowsPerPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(Leaderboard, \"65nbIEELuFY2eeUXbED/8VsHrEQ=\");\n_c = Leaderboard;\nexport default Leaderboard;\nvar _c;\n$RefreshReg$(_c, \"Leaderboard\");","map":{"version":3,"names":["React","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","jsxDEV","_jsxDEV","Leaderboard","_s","page","setPage","useState","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","columns","id","label","minWidth","align","format","toFixed","createData","Position","Racer","Time","GapToFirst","rows","sx","width","overflow","children","maxHeight","backgroundColor","stickyHeader","map","column","style","fontWeight","color","fileName","_jsxFileName","lineNumber","columnNumber","slice","row","rowIndex","rowColor","hover","role","tabIndex","code","rowsPerPageOptions","component","count","length","onPageChange","onRowsPerPageChange","_c","$RefreshReg$"],"sources":["C:/Users/rishi/Deepracer-Dashboard/deepdashfe/src/components/Leaderboard.jsx"],"sourcesContent":["import React from 'react';\r\nimport Paper from '@mui/material/Paper';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\n\r\nfunction Leaderboard() {\r\n  const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n    const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const columns = [\r\n    { id: 'Position', label: 'Position', minWidth: 100 },\r\n    { id: 'Racer', label: 'Racer', minWidth: 170 },\r\n    { id: 'Time', label: 'Time', minWidth: 170, align: 'right' },\r\n    {\r\n      id: 'GapToFirst',\r\n      label: 'Gap To First',\r\n      minWidth: 170,\r\n      align: 'right',\r\n      format: (value) => value.toFixed(2),\r\n    },\r\n  ];\r\n  \r\n  function createData(Position, Racer, Time, GapToFirst) {\r\n    return { Position, Racer, Time, GapToFirst };\r\n  }\r\n  \r\n  const rows = [\r\n    createData('1', 'Team DeepRacer', 100, 0),\r\n    createData('2', 'Team FiHi', 200, 100),\r\n    createData('3', 'Team HiFi', 250, 150),\r\n    createData('4', 'Team RACE', 310, 210),\r\n  ];\r\n  return (\r\n    <Paper sx={{ width: '100%', overflow: 'hidden' }}>\r\n      <TableContainer sx={{ maxHeight: 440, backgroundColor: 'light-gray' }}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead sx={{ backgroundColor: 'black'}}>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth, fontWeight: 'bold', color: 'black' }} // Adding inline styles for bold and black\r\n\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n          {rows\r\n          .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n          .map((row, rowIndex) => {\r\n            const { Position } = row;\r\n            let rowColor = '';\r\n            if (Position === 1) {\r\n              rowColor = 'gold';\r\n            } else if (Position === 2) {\r\n              rowColor = 'silver';\r\n            } else if (Position === 3) {\r\n              rowColor = 'bronze';\r\n            }\r\n                return (\r\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                    {columns.map((column) => {\r\n                      const value = row[column.id];\r\n                      return (\r\n                        <TableCell key={column.id} align={column.align}>\r\n                          {column.format && typeof value === 'number'\r\n                            ? column.format(value)\r\n                            : value}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default Leaderboard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}